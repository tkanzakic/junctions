webpackJsonp([1],{75:function(n,s,a){n.exports={module:a(112),source:a(238)}},112:function(n,s,a){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}function p(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function o(n,s){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!s||"object"!=typeof s&&"function"!=typeof s?n:s}function e(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function, not "+typeof s);n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),s&&(Object.setPrototypeOf?Object.setPrototypeOf(n,s):n.__proto__=s)}function c(n){var s=n.route,a=n.locate,t=n.history,p=void 0;switch(s?s.key:s){case"about":p=i["default"].createElement("h2",null,"About");break;case"help":p=i["default"].createElement("h2",null,"Help");break;case null:p=i["default"].createElement("h2",null,"Home");break;case void 0:p=i["default"].createElement("h2",null,"404 - Computer Says No")}return i["default"].createElement("div",null,i["default"].createElement("nav",null,i["default"].createElement(r.Link,{history:t,to:a()},"Home"),i["default"].createElement(r.Link,{history:t,to:a(h.createRoute("about"))},"About"),i["default"].createElement(r.Link,{history:t,to:a(h.createRoute("help"))},"Help"),i["default"].createElement(r.Link,{history:t,to:{pathname:"/computer-says-no"}},"Fail")),p)}Object.defineProperty(s,"__esModule",{value:!0});var u=function(){function n(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}return function(s,a,t){return a&&n(s.prototype,a),t&&n(s,t),s}}(),l=a(7),i=t(l),k=a(21),r=a(40),h=(0,k.createJunction)({about:{},help:{}}),m=function(n){function s(){return p(this,s),o(this,(s.__proto__||Object.getPrototypeOf(s)).apply(this,arguments))}return e(s,n),u(s,[{key:"componentWillMount",value:function(){this.converter=(0,k.createConverter)(h),this.handleLocationChange(this.props.history.location)}},{key:"componentDidMount",value:function(){this.unlisten=this.props.history.listen(this.handleLocationChange.bind(this))}},{key:"componentWillUnmount",value:function(){this.unlisten&&(this.unlisten(),this.unlisten=null)}},{key:"handleLocationChange",value:function(n){var s=this.converter.route(n),a=s&&this.converter.locate(s);s&&!(0,k.locationsEqual)(n,a)&&this.props.history.replace(a),this.setState({route:s})}},{key:"render",value:function(){return i["default"].createElement(c,{route:this.state.route,locate:this.converter.locate,history:this.props.history})}}]),s}(l.Component);s["default"]=m},238:function(n,s){n.exports='<span class="token comment" spellcheck="true">/**\n * This example shows how to use Junctions without any react-router\n * integrations, except the `&lt;Link>` component (which is not specific\n * to Junctions).\n *\n * In particular, we forgo use of the `&lt;Router>` component, instead\n * creating a managing our own `Converter` object within the `&lt;BasicExample>`\n * component.\n */</span>\n\n<span class="token keyword" >import</span> React<span class="token punctuation" >,</span> <span class="token punctuation" >{</span> Component<span class="token punctuation" >,</span> PropTypes <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'react\'</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> createJunction<span class="token punctuation" >,</span> createConverter<span class="token punctuation" >,</span> locationsEqual <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'junctions\'</span>\n<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Link <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'react-junctions\'</span>\n\n\n<span class="token comment" spellcheck="true">// Create a Junction to specify the possible navigation states of our</span>\n<span class="token comment" spellcheck="true">// &lt;AppScreen> component</span>\n<span class="token keyword" >const</span> junction <span class="token operator" >=</span> <span class="token function" >createJunction</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span>\n  about<span class="token punctuation" >:</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n  help<span class="token punctuation" >:</span> <span class="token punctuation" >{</span><span class="token punctuation" >}</span><span class="token punctuation" >,</span>\n<span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n\n<span class="token keyword" >function</span> <span class="token function" >AppScreen</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> route<span class="token punctuation" >,</span> locate<span class="token punctuation" >,</span> history <span class="token punctuation" >}</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n  <span class="token comment" spellcheck="true">// Choose what content to render based on the current state of our</span>\n  <span class="token comment" spellcheck="true">// junction, as read from `props.route`</span>\n  <span class="token keyword" >let</span> content\n  <span class="token keyword" >switch</span> <span class="token punctuation" >(</span>route <span class="token operator" >?</span> route<span class="token punctuation" >.</span>key <span class="token punctuation" >:</span> route<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >case</span> <span class="token string" >\'about\'</span><span class="token punctuation" >:</span>\n      content <span class="token operator" >=</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>h2</span><span class="token punctuation" >></span></span>About<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>h2</span><span class="token punctuation" >></span></span>\n      <span class="token keyword" >break</span>\n\n    <span class="token keyword" >case</span> <span class="token string" >\'help\'</span><span class="token punctuation" >:</span>\n      content <span class="token operator" >=</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>h2</span><span class="token punctuation" >></span></span>Help<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>h2</span><span class="token punctuation" >></span></span>\n      <span class="token keyword" >break</span>\n\n    <span class="token comment" spellcheck="true">// As our Junction has no default branch, we handle the default</span>\n    <span class="token comment" spellcheck="true">// case </span>\n    <span class="token keyword" >case</span> <span class="token keyword" >null</span><span class="token punctuation" >:</span>\n      content <span class="token operator" >=</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>h2</span><span class="token punctuation" >></span></span>Home<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>h2</span><span class="token punctuation" >></span></span>\n      <span class="token keyword" >break</span>\n\n    <span class="token comment" spellcheck="true">// An undefined route indicates that the converter didn\'t know how</span>\n    <span class="token comment" spellcheck="true">// to handle the received location</span>\n    <span class="token keyword" >case</span> undefined<span class="token punctuation" >:</span>\n      content <span class="token operator" >=</span> <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>h2</span><span class="token punctuation" >></span></span><span class="token number" >404</span> <span class="token operator" >-</span> Computer Says No<span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>h2</span><span class="token punctuation" >></span></span>\n      <span class="token keyword" >break</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>div</span><span class="token punctuation" >></span></span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>nav</span><span class="token punctuation" >></span></span>\n        <span class="token punctuation" >{</span><span class="token comment" spellcheck="true">/*\n          Use `locate()` to get a `Location` for the current route, but with\n          any children nulled out\n        */</span><span class="token punctuation" >}</span>\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Link</span> <span class="token attr-name" >history</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>history<span class="token punctuation" >}</span></span> <span class="token attr-name" >to</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token function" >locate</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n          Home\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Link</span><span class="token punctuation" >></span></span>\n\n\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Link</span> <span class="token attr-name" >history</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>history<span class="token punctuation" >}</span></span> <span class="token attr-name" >to</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token function" >locate</span><span class="token punctuation" >(</span>junction<span class="token punctuation" >.</span><span class="token function" >createRoute</span><span class="token punctuation" >(</span><span class="token string" >\'about\'</span><span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n          About\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Link</span><span class="token punctuation" >></span></span>\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Link</span> <span class="token attr-name" >history</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>history<span class="token punctuation" >}</span></span> <span class="token attr-name" >to</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token function" >locate</span><span class="token punctuation" >(</span>junction<span class="token punctuation" >.</span><span class="token function" >createRoute</span><span class="token punctuation" >(</span><span class="token string" >\'help\'</span><span class="token punctuation" >)</span><span class="token punctuation" >)</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n          Help\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Link</span><span class="token punctuation" >></span></span>\n\n        <span class="token punctuation" >{</span><span class="token comment" spellcheck="true">/*\n          We can specify our own Location with the `&lt;Link>` component, but\n          there is no gaurantee it will be correct!\n        */</span><span class="token punctuation" >}</span>\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Link</span> <span class="token attr-name" >history</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span>history<span class="token punctuation" >}</span></span> <span class="token attr-name" >to</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token punctuation" >{</span> pathname<span class="token punctuation" >:</span> <span class="token string" >\'/computer-says-no\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n          Fail\n        <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Link</span><span class="token punctuation" >></span></span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>nav</span><span class="token punctuation" >></span></span>\n      <span class="token punctuation" >{</span>content<span class="token punctuation" >}</span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>div</span><span class="token punctuation" >></span></span>\n  <span class="token punctuation" >)</span><span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>\n\n\n<span class="token comment" spellcheck="true">/**\n * All of the live examples export a single component that takes a `history`\n * object which is passed in by the documentation website app.\n * \n * You could still use these example component\'s as-is in a standard React\n * app -- you\'d just need to create and pass in your own `history`.\n * \n * To find out about `history` objects, see\n * https://github.com/mjackson/history.\n */</span>\n<span class="token keyword" >export</span> <span class="token keyword" >default</span> <span class="token keyword" >class</span> <span class="token class-name" >BasicExample</span> <span class="token keyword" >extends</span> <span class="token class-name" >Component</span> <span class="token punctuation" >{</span>\n\n  <span class="token function" >componentWillMount</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token comment" spellcheck="true">// As an application\'s Junction doesn\'t usually change at runtime,</span>\n    <span class="token comment" spellcheck="true">// we only ever need a single application-wide converter</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>converter <span class="token operator" >=</span> <span class="token function" >createConverter</span><span class="token punctuation" >(</span>junction<span class="token punctuation" >)</span>\n\n    <span class="token comment" spellcheck="true">// Handle the application\'s initial location</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >handleLocationChange</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>history<span class="token punctuation" >.</span>location<span class="token punctuation" >)</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >componentDidMount</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span>unlisten <span class="token operator" >=</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>history<span class="token punctuation" >.</span><span class="token function" >listen</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>handleLocationChange<span class="token punctuation" >.</span><span class="token function" >bind</span><span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >)</span><span class="token punctuation" >)</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >componentWillUnmount</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>unlisten<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >unlisten</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span>unlisten <span class="token operator" >=</span> <span class="token keyword" >null</span>  \n    <span class="token punctuation" >}</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >handleLocationChange</span><span class="token punctuation" >(</span>location<span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token comment" spellcheck="true">// Convert the Location object emitted by our history into a Route</span>\n    <span class="token comment" spellcheck="true">// through our application Junction</span>\n    <span class="token keyword" >const</span> route <span class="token operator" >=</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>converter<span class="token punctuation" >.</span><span class="token function" >route</span><span class="token punctuation" >(</span>location<span class="token punctuation" >)</span>\n\n    <span class="token comment" spellcheck="true">// The Route produced by the converter may contain informatino which</span>\n    <span class="token comment" spellcheck="true">// the received Location object doesn\'t, due to default parameters</span>\n    <span class="token comment" spellcheck="true">// and default branches. If this is the case, create a new Location</span>\n    <span class="token comment" spellcheck="true">// object containing the new information, and redirect to it</span>\n    <span class="token keyword" >const</span> canonicalLocation <span class="token operator" >=</span> route <span class="token operator" >&amp;&amp;</span> <span class="token keyword" >this</span><span class="token punctuation" >.</span>converter<span class="token punctuation" >.</span><span class="token function" >locate</span><span class="token punctuation" >(</span>route<span class="token punctuation" >)</span>\n    <span class="token keyword" >if</span> <span class="token punctuation" >(</span>route <span class="token operator" >&amp;&amp;</span> <span class="token operator" >!</span><span class="token function" >locationsEqual</span><span class="token punctuation" >(</span>location<span class="token punctuation" >,</span> canonicalLocation<span class="token punctuation" >)</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n      <span class="token keyword" >this</span><span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>history<span class="token punctuation" >.</span><span class="token function" >replace</span><span class="token punctuation" >(</span>canonicalLocation<span class="token punctuation" >)</span>\n    <span class="token punctuation" >}</span>\n\n    <span class="token comment" spellcheck="true">// Add the route to component state to trigger a re-render</span>\n    <span class="token keyword" >this</span><span class="token punctuation" >.</span><span class="token function" >setState</span><span class="token punctuation" >(</span><span class="token punctuation" >{</span> route <span class="token punctuation" >}</span><span class="token punctuation" >)</span>\n  <span class="token punctuation" >}</span>\n\n  <span class="token function" >render</span><span class="token punctuation" >(</span><span class="token punctuation" >)</span> <span class="token punctuation" >{</span>\n    <span class="token keyword" >return</span> <span class="token punctuation" >(</span>\n      <span class="token comment" spellcheck="true">// Screen Components always take `route` and `locate` props, so they</span>\n      <span class="token comment" spellcheck="true">// can decide what to render, and create Locations for any Links</span>\n      <span class="token comment" spellcheck="true">// and redirects.</span>\n      <span class="token comment" spellcheck="true">//</span>\n      <span class="token comment" spellcheck="true">// In this example, we also pass a history. Usually, this would be</span>\n      <span class="token comment" spellcheck="true">// passed via context, using a &lt;Router> or &lt;HistoryContext> component.</span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>AppScreen</span>\n        <span class="token attr-name" >route</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>state<span class="token punctuation" >.</span>route<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >locate</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>converter<span class="token punctuation" >.</span>locate<span class="token punctuation" >}</span></span>\n        <span class="token attr-name" >history</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token keyword" >this</span><span class="token punctuation" >.</span>props<span class="token punctuation" >.</span>history<span class="token punctuation" >}</span></span>\n      <span class="token punctuation" >/></span></span>\n    <span class="token punctuation" >)</span>\n  <span class="token punctuation" >}</span>\n\n<span class="token punctuation" >}</span>\n\n\n'}});
//# sourceMappingURL=1.bundle-69981f6e2cbb6ad4a383.js.map