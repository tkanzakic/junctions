{"version":3,"sources":["webpack:///1.bundle-69981f6e2cbb6ad4a383.js","webpack:///../examples/Raw.example.js?6c4d","webpack:///../examples/Raw.example.js","webpack:///../examples/Raw.example.js?7893"],"names":["webpackJsonp","75","module","exports","__webpack_require__","source","112","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","AppScreen","_ref","route","locate","history","content","key","_react2","createElement","undefined","_reactJunctions","Link","to","junction","createRoute","pathname","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_junctions","createJunction","about","help","BasicExample","_Component","this","getPrototypeOf","apply","arguments","converter","createConverter","handleLocationChange","location","unlisten","listen","bind","canonicalLocation","locationsEqual","replace","setState","state","Component","238"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAASC,EAAQC,EAASC,GCFhCF,EAAAC,SACAD,OAAAE,EAAA,KACAC,OAAAD,EAAA,ODWME,IACA,SAASJ,EAAQC,EAASC,GAE/B,YAgBA,SAASG,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASG,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GEjBle,QAASW,GAATC,GAA+C,GAA1BC,GAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,QAG9BC,QACJ,QAAQH,EAAQA,EAAMI,IAAMJ,GAC1B,IAAK,QACHG,EAAUE,aAAAC,cAAA,kBACV,MAEF,KAAK,OACHH,EAAUE,aAAAC,cAAA,iBACV,MAIF,KAAK,MACHH,EAAUE,aAAAC,cAAA,iBACV,MAIF,KAAKC,QACHJ,EAAUE,aAAAC,cAAA,oCAId,MACED,cAAAC,cAAA,WACED,aAAAC,cAAA,WAKED,aAAAC,cAAAE,EAAAC,MAAMP,QAASA,EAASQ,GAAIT,KAA5B,QAKAI,aAAAC,cAAAE,EAAAC,MAAMP,QAASA,EAASQ,GAAIT,EAAOU,EAASC,YAAY,WAAxD,SAGAP,aAAAC,cAAAE,EAAAC,MAAMP,QAASA,EAASQ,GAAIT,EAAOU,EAASC,YAAY,UAAxD,QAQAP,aAAAC,cAAAE,EAAAC,MAAMP,QAASA,EAASQ,IAAMG,SAAU,sBAAxC,SAIDV,GFxDNd,OAAOyB,eAAe7C,EAAS,cAC7BuB,OAAO,GAGT,IAAIuB,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAW5B,WAAa4B,EAAW5B,aAAc,EAAO4B,EAAW1B,cAAe,EAAU,SAAW0B,KAAYA,EAAW3B,UAAW,GAAML,OAAOyB,eAAeG,EAAQI,EAAWjB,IAAKiB,IAAiB,MAAO,UAAU1C,EAAa2C,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBrC,EAAYS,UAAWkC,GAAiBC,GAAaP,EAAiBrC,EAAa4C,GAAqB5C,MEbjiB6C,EAAAtD,EAAA,GFiBKmC,EAAUhC,EAAuBmD,GEhBtCC,EAAAvD,EAAA,IACAsC,EAAAtC,EAAA,IAKMyC,GAAW,EAAAc,EAAAC,iBACfC,SACAC,UAwEmBC,EFqDD,SAAUC,GAG3B,QAASD,KAGP,MAFApD,GAAgBsD,KAAMF,GAEfhD,EAA2BkD,MAAOF,EAAahC,WAAaR,OAAO2C,eAAeH,IAAeI,MAAMF,KAAMG,YAgEtH,MArEAjD,GAAU4C,EAAcC,GAQxBf,EAAac,IACXzB,IAAK,qBACLZ,MAAO,WE3DRuC,KAAKI,WAAY,EAAAV,EAAAW,iBAAgBzB,GAGjCoB,KAAKM,qBAAqBN,KAAKb,MAAMhB,QAAQoC,aFiE5ClC,IAAK,oBACLZ,MAAO,WE9DRuC,KAAKQ,SAAWR,KAAKb,MAAMhB,QAAQsC,OAAOT,KAAKM,qBAAqBI,KAAKV,UFkExE3B,IAAK,uBACLZ,MAAO,WE/DJuC,KAAKQ,WACPR,KAAKQ,WACLR,KAAKQ,SAAW,SFoEjBnC,IAAK,uBACLZ,MAAO,SEjEW8C,GAGnB,GAAMtC,GAAQ+B,KAAKI,UAAUnC,MAAMsC,GAM7BI,EAAoB1C,GAAS+B,KAAKI,UAAUlC,OAAOD,EACrDA,MAAU,EAAAyB,EAAAkB,gBAAeL,EAAUI,IACrCX,KAAKb,MAAMhB,QAAQ0C,QAAQF,GAI7BX,KAAKc,UAAW7C,aFoEfI,IAAK,SACLZ,MAAO,WEjER,MAOEa,cAAAC,cAACR,GACCE,MAAO+B,KAAKe,MAAM9C,MAClBC,OAAQ8B,KAAKI,UAAUlC,OACvBC,QAAS6B,KAAKb,MAAMhB,cFwElB2B,GACPL,EAAOuB,UAET9E,cE9HoB4D,GFkIfmB,IACA,SAAShF,EAAQC,GG9NvBD,EAAAC,QAAA","file":"1.bundle-69981f6e2cbb6ad4a383.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 75:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t    module.exports = {\n\t      module: __webpack_require__(112),\n\t      source: __webpack_require__(238),\n\t    }\n\t  \n\n/***/ },\n\n/***/ 112:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(7);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _junctions = __webpack_require__(21);\n\t\n\tvar _reactJunctions = __webpack_require__(40);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This example shows how to use Junctions without any react-router\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * integrations, except the `<Link>` component (which is not specific\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * to Junctions).\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * In particular, we forgo use of the `<Router>` component, instead\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * creating a managing our own `Converter` object within the `<BasicExample>`\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * component.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\t// Create a Junction to specify the possible navigation states of our\n\t// <AppScreen> component\n\tvar junction = (0, _junctions.createJunction)({\n\t  about: {},\n\t  help: {}\n\t});\n\t\n\tfunction AppScreen(_ref) {\n\t  var route = _ref.route,\n\t      locate = _ref.locate,\n\t      history = _ref.history;\n\t\n\t  // Choose what content to render based on the current state of our\n\t  // junction, as read from `props.route`\n\t  var content = void 0;\n\t  switch (route ? route.key : route) {\n\t    case 'about':\n\t      content = _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'About'\n\t      );\n\t      break;\n\t\n\t    case 'help':\n\t      content = _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'Help'\n\t      );\n\t      break;\n\t\n\t    // As our Junction has no default branch, we handle the default\n\t    // case \n\t    case null:\n\t      content = _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        'Home'\n\t      );\n\t      break;\n\t\n\t    // An undefined route indicates that the converter didn't know how\n\t    // to handle the received location\n\t    case undefined:\n\t      content = _react2.default.createElement(\n\t        'h2',\n\t        null,\n\t        '404 - Computer Says No'\n\t      );\n\t      break;\n\t  }\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      'nav',\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactJunctions.Link,\n\t        { history: history, to: locate() },\n\t        'Home'\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactJunctions.Link,\n\t        { history: history, to: locate(junction.createRoute('about')) },\n\t        'About'\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactJunctions.Link,\n\t        { history: history, to: locate(junction.createRoute('help')) },\n\t        'Help'\n\t      ),\n\t      _react2.default.createElement(\n\t        _reactJunctions.Link,\n\t        { history: history, to: { pathname: '/computer-says-no' } },\n\t        'Fail'\n\t      )\n\t    ),\n\t    content\n\t  );\n\t}\n\t\n\t/**\n\t * All of the live examples export a single component that takes a `history`\n\t * object which is passed in by the documentation website app.\n\t * \n\t * You could still use these example component's as-is in a standard React\n\t * app -- you'd just need to create and pass in your own `history`.\n\t * \n\t * To find out about `history` objects, see\n\t * https://github.com/mjackson/history.\n\t */\n\t\n\tvar BasicExample = function (_Component) {\n\t  _inherits(BasicExample, _Component);\n\t\n\t  function BasicExample() {\n\t    _classCallCheck(this, BasicExample);\n\t\n\t    return _possibleConstructorReturn(this, (BasicExample.__proto__ || Object.getPrototypeOf(BasicExample)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(BasicExample, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      // As an application's Junction doesn't usually change at runtime,\n\t      // we only ever need a single application-wide converter\n\t      this.converter = (0, _junctions.createConverter)(junction);\n\t\n\t      // Handle the application's initial location\n\t      this.handleLocationChange(this.props.history.location);\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.unlisten = this.props.history.listen(this.handleLocationChange.bind(this));\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      if (this.unlisten) {\n\t        this.unlisten();\n\t        this.unlisten = null;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleLocationChange',\n\t    value: function handleLocationChange(location) {\n\t      // Convert the Location object emitted by our history into a Route\n\t      // through our application Junction\n\t      var route = this.converter.route(location);\n\t\n\t      // The Route produced by the converter may contain informatino which\n\t      // the received Location object doesn't, due to default parameters\n\t      // and default branches. If this is the case, create a new Location\n\t      // object containing the new information, and redirect to it\n\t      var canonicalLocation = route && this.converter.locate(route);\n\t      if (route && !(0, _junctions.locationsEqual)(location, canonicalLocation)) {\n\t        this.props.history.replace(canonicalLocation);\n\t      }\n\t\n\t      // Add the route to component state to trigger a re-render\n\t      this.setState({ route: route });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return (\n\t        // Screen Components always take `route` and `locate` props, so they\n\t        // can decide what to render, and create Locations for any Links\n\t        // and redirects.\n\t        //\n\t        // In this example, we also pass a history. Usually, this would be\n\t        // passed via context, using a <Router> or <HistoryContext> component.\n\t        _react2.default.createElement(AppScreen, {\n\t          route: this.state.route,\n\t          locate: this.converter.locate,\n\t          history: this.props.history\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BasicExample;\n\t}(_react.Component);\n\t\n\texports.default = BasicExample;\n\n/***/ },\n\n/***/ 238:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n * This example shows how to use Junctions without any react-router\\n * integrations, except the `&lt;Link>` component (which is not specific\\n * to Junctions).\\n *\\n * In particular, we forgo use of the `&lt;Router>` component, instead\\n * creating a managing our own `Converter` object within the `&lt;BasicExample>`\\n * component.\\n */</span>\\n\\n<span class=\\\"token keyword\\\" >import</span> React<span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token punctuation\\\" >{</span> Component<span class=\\\"token punctuation\\\" >,</span> PropTypes <span class=\\\"token punctuation\\\" >}</span> <span class=\\\"token keyword\\\" >from</span> <span class=\\\"token string\\\" >'react'</span>\\n<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> createJunction<span class=\\\"token punctuation\\\" >,</span> createConverter<span class=\\\"token punctuation\\\" >,</span> locationsEqual <span class=\\\"token punctuation\\\" >}</span> <span class=\\\"token keyword\\\" >from</span> <span class=\\\"token string\\\" >'junctions'</span>\\n<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> Link <span class=\\\"token punctuation\\\" >}</span> <span class=\\\"token keyword\\\" >from</span> <span class=\\\"token string\\\" >'react-junctions'</span>\\n\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Create a Junction to specify the possible navigation states of our</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// &lt;AppScreen> component</span>\\n<span class=\\\"token keyword\\\" >const</span> junction <span class=\\\"token operator\\\" >=</span> <span class=\\\"token function\\\" >createJunction</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span>\\n  about<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >,</span>\\n  help<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >,</span>\\n<span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n\\n<span class=\\\"token keyword\\\" >function</span> <span class=\\\"token function\\\" >AppScreen</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span> route<span class=\\\"token punctuation\\\" >,</span> locate<span class=\\\"token punctuation\\\" >,</span> history <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Choose what content to render based on the current state of our</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// junction, as read from `props.route`</span>\\n  <span class=\\\"token keyword\\\" >let</span> content\\n  <span class=\\\"token keyword\\\" >switch</span> <span class=\\\"token punctuation\\\" >(</span>route <span class=\\\"token operator\\\" >?</span> route<span class=\\\"token punctuation\\\" >.</span>key <span class=\\\"token punctuation\\\" >:</span> route<span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >case</span> <span class=\\\"token string\\\" >'about'</span><span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>About<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n\\n    <span class=\\\"token keyword\\\" >case</span> <span class=\\\"token string\\\" >'help'</span><span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>Help<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// As our Junction has no default branch, we handle the default</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// case </span>\\n    <span class=\\\"token keyword\\\" >case</span> <span class=\\\"token keyword\\\" >null</span><span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>Home<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// An undefined route indicates that the converter didn't know how</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// to handle the received location</span>\\n    <span class=\\\"token keyword\\\" >case</span> undefined<span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token number\\\" >404</span> <span class=\\\"token operator\\\" >-</span> Computer Says No<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token keyword\\\" >return</span> <span class=\\\"token punctuation\\\" >(</span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>nav</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n          Use `locate()` to get a `Location` for the current route, but with\\n          any children nulled out\\n        */</span><span class=\\\"token punctuation\\\" >}</span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          Home\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n\\n\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span>junction<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >createRoute</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token string\\\" >'about'</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          About\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span>junction<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >createRoute</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token string\\\" >'help'</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          Help\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n\\n        <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n          We can specify our own Location with the `&lt;Link>` component, but\\n          there is no gaurantee it will be correct!\\n        */</span><span class=\\\"token punctuation\\\" >}</span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token punctuation\\\" >{</span> pathname<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'/computer-says-no'</span> <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          Fail\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>nav</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token punctuation\\\" >{</span>content<span class=\\\"token punctuation\\\" >}</span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n  <span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >;</span>\\n<span class=\\\"token punctuation\\\" >}</span>\\n\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n * All of the live examples export a single component that takes a `history`\\n * object which is passed in by the documentation website app.\\n * \\n * You could still use these example component's as-is in a standard React\\n * app -- you'd just need to create and pass in your own `history`.\\n * \\n * To find out about `history` objects, see\\n * https://github.com/mjackson/history.\\n */</span>\\n<span class=\\\"token keyword\\\" >export</span> <span class=\\\"token keyword\\\" >default</span> <span class=\\\"token keyword\\\" >class</span> <span class=\\\"token class-name\\\" >BasicExample</span> <span class=\\\"token keyword\\\" >extends</span> <span class=\\\"token class-name\\\" >Component</span> <span class=\\\"token punctuation\\\" >{</span>\\n\\n  <span class=\\\"token function\\\" >componentWillMount</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// As an application's Junction doesn't usually change at runtime,</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// we only ever need a single application-wide converter</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter <span class=\\\"token operator\\\" >=</span> <span class=\\\"token function\\\" >createConverter</span><span class=\\\"token punctuation\\\" >(</span>junction<span class=\\\"token punctuation\\\" >)</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Handle the application's initial location</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >handleLocationChange</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >.</span>location<span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >componentDidMount</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>unlisten <span class=\\\"token operator\\\" >=</span> <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >listen</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>handleLocationChange<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >bind</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >componentWillUnmount</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >if</span> <span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>unlisten<span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n      <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >unlisten</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span>\\n      <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>unlisten <span class=\\\"token operator\\\" >=</span> <span class=\\\"token keyword\\\" >null</span>  \\n    <span class=\\\"token punctuation\\\" >}</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >handleLocationChange</span><span class=\\\"token punctuation\\\" >(</span>location<span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Convert the Location object emitted by our history into a Route</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// through our application Junction</span>\\n    <span class=\\\"token keyword\\\" >const</span> route <span class=\\\"token operator\\\" >=</span> <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >route</span><span class=\\\"token punctuation\\\" >(</span>location<span class=\\\"token punctuation\\\" >)</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// The Route produced by the converter may contain informatino which</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// the received Location object doesn't, due to default parameters</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// and default branches. If this is the case, create a new Location</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// object containing the new information, and redirect to it</span>\\n    <span class=\\\"token keyword\\\" >const</span> canonicalLocation <span class=\\\"token operator\\\" >=</span> route <span class=\\\"token operator\\\" >&amp;&amp;</span> <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span>route<span class=\\\"token punctuation\\\" >)</span>\\n    <span class=\\\"token keyword\\\" >if</span> <span class=\\\"token punctuation\\\" >(</span>route <span class=\\\"token operator\\\" >&amp;&amp;</span> <span class=\\\"token operator\\\" >!</span><span class=\\\"token function\\\" >locationsEqual</span><span class=\\\"token punctuation\\\" >(</span>location<span class=\\\"token punctuation\\\" >,</span> canonicalLocation<span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n      <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >replace</span><span class=\\\"token punctuation\\\" >(</span>canonicalLocation<span class=\\\"token punctuation\\\" >)</span>\\n    <span class=\\\"token punctuation\\\" >}</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Add the route to component state to trigger a re-render</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >setState</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span> route <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >render</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >return</span> <span class=\\\"token punctuation\\\" >(</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Screen Components always take `route` and `locate` props, so they</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// can decide what to render, and create Locations for any Links</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// and redirects.</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// In this example, we also pass a history. Usually, this would be</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// passed via context, using a &lt;Router> or &lt;HistoryContext> component.</span>\\n      <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>AppScreen</span>\\n        <span class=\\\"token attr-name\\\" >route</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>state<span class=\\\"token punctuation\\\" >.</span>route<span class=\\\"token punctuation\\\" >}</span></span>\\n        <span class=\\\"token attr-name\\\" >locate</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter<span class=\\\"token punctuation\\\" >.</span>locate<span class=\\\"token punctuation\\\" >}</span></span>\\n        <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >}</span></span>\\n      <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n<span class=\\\"token punctuation\\\" >}</span>\\n\\n\\n\"\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 1.bundle-69981f6e2cbb6ad4a383.js\n **/","\n    module.exports = {\n      module: require(\"!!babel!/Users/james/seven-stripes/packages/junctions/examples/Raw.example.js\"),\n      source: require(\"!!prismjs-loader?lang=jsx!/Users/james/seven-stripes/packages/junctions/examples/Raw.example.js\"),\n    }\n  \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./loaders/module-and-source-loader.js!../examples/Raw.example.js\n ** module id = 75\n ** module chunks = 1\n **/","/**\n * This example shows how to use Junctions without any react-router\n * integrations, except the `<Link>` component (which is not specific\n * to Junctions).\n *\n * In particular, we forgo use of the `<Router>` component, instead\n * creating a managing our own `Converter` object within the `<BasicExample>`\n * component.\n */\n\nimport React, { Component, PropTypes } from 'react'\nimport { createJunction, createConverter, locationsEqual } from 'junctions'\nimport { Link } from 'react-junctions'\n\n\n// Create a Junction to specify the possible navigation states of our\n// <AppScreen> component\nconst junction = createJunction({\n  about: {},\n  help: {},\n})\n\nfunction AppScreen({ route, locate, history }) {\n  // Choose what content to render based on the current state of our\n  // junction, as read from `props.route`\n  let content\n  switch (route ? route.key : route) {\n    case 'about':\n      content = <h2>About</h2>\n      break\n\n    case 'help':\n      content = <h2>Help</h2>\n      break\n\n    // As our Junction has no default branch, we handle the default\n    // case \n    case null:\n      content = <h2>Home</h2>\n      break\n\n    // An undefined route indicates that the converter didn't know how\n    // to handle the received location\n    case undefined:\n      content = <h2>404 - Computer Says No</h2>\n      break\n  }\n\n  return (\n    <div>\n      <nav>\n        {/*\n          Use `locate()` to get a `Location` for the current route, but with\n          any children nulled out\n        */}\n        <Link history={history} to={locate()}>\n          Home\n        </Link>\n\n\n        <Link history={history} to={locate(junction.createRoute('about'))}>\n          About\n        </Link>\n        <Link history={history} to={locate(junction.createRoute('help'))}>\n          Help\n        </Link>\n\n        {/*\n          We can specify our own Location with the `<Link>` component, but\n          there is no gaurantee it will be correct!\n        */}\n        <Link history={history} to={{ pathname: '/computer-says-no' }}>\n          Fail\n        </Link>\n      </nav>\n      {content}\n    </div>\n  );\n}\n\n\n/**\n * All of the live examples export a single component that takes a `history`\n * object which is passed in by the documentation website app.\n * \n * You could still use these example component's as-is in a standard React\n * app -- you'd just need to create and pass in your own `history`.\n * \n * To find out about `history` objects, see\n * https://github.com/mjackson/history.\n */\nexport default class BasicExample extends Component {\n\n  componentWillMount() {\n    // As an application's Junction doesn't usually change at runtime,\n    // we only ever need a single application-wide converter\n    this.converter = createConverter(junction)\n\n    // Handle the application's initial location\n    this.handleLocationChange(this.props.history.location)\n  }\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen(this.handleLocationChange.bind(this))\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) {\n      this.unlisten()\n      this.unlisten = null  \n    }\n  }\n\n  handleLocationChange(location) {\n    // Convert the Location object emitted by our history into a Route\n    // through our application Junction\n    const route = this.converter.route(location)\n\n    // The Route produced by the converter may contain informatino which\n    // the received Location object doesn't, due to default parameters\n    // and default branches. If this is the case, create a new Location\n    // object containing the new information, and redirect to it\n    const canonicalLocation = route && this.converter.locate(route)\n    if (route && !locationsEqual(location, canonicalLocation)) {\n      this.props.history.replace(canonicalLocation)\n    }\n\n    // Add the route to component state to trigger a re-render\n    this.setState({ route })\n  }\n\n  render() {\n    return (\n      // Screen Components always take `route` and `locate` props, so they\n      // can decide what to render, and create Locations for any Links\n      // and redirects.\n      //\n      // In this example, we also pass a history. Usually, this would be\n      // passed via context, using a <Router> or <HistoryContext> component.\n      <AppScreen\n        route={this.state.route}\n        locate={this.converter.locate}\n        history={this.props.history}\n      />\n    )\n  }\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ../examples/Raw.example.js\n **/","module.exports = \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n * This example shows how to use Junctions without any react-router\\n * integrations, except the `&lt;Link>` component (which is not specific\\n * to Junctions).\\n *\\n * In particular, we forgo use of the `&lt;Router>` component, instead\\n * creating a managing our own `Converter` object within the `&lt;BasicExample>`\\n * component.\\n */</span>\\n\\n<span class=\\\"token keyword\\\" >import</span> React<span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token punctuation\\\" >{</span> Component<span class=\\\"token punctuation\\\" >,</span> PropTypes <span class=\\\"token punctuation\\\" >}</span> <span class=\\\"token keyword\\\" >from</span> <span class=\\\"token string\\\" >'react'</span>\\n<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> createJunction<span class=\\\"token punctuation\\\" >,</span> createConverter<span class=\\\"token punctuation\\\" >,</span> locationsEqual <span class=\\\"token punctuation\\\" >}</span> <span class=\\\"token keyword\\\" >from</span> <span class=\\\"token string\\\" >'junctions'</span>\\n<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> Link <span class=\\\"token punctuation\\\" >}</span> <span class=\\\"token keyword\\\" >from</span> <span class=\\\"token string\\\" >'react-junctions'</span>\\n\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Create a Junction to specify the possible navigation states of our</span>\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// &lt;AppScreen> component</span>\\n<span class=\\\"token keyword\\\" >const</span> junction <span class=\\\"token operator\\\" >=</span> <span class=\\\"token function\\\" >createJunction</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span>\\n  about<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >,</span>\\n  help<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >,</span>\\n<span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n\\n<span class=\\\"token keyword\\\" >function</span> <span class=\\\"token function\\\" >AppScreen</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span> route<span class=\\\"token punctuation\\\" >,</span> locate<span class=\\\"token punctuation\\\" >,</span> history <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Choose what content to render based on the current state of our</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// junction, as read from `props.route`</span>\\n  <span class=\\\"token keyword\\\" >let</span> content\\n  <span class=\\\"token keyword\\\" >switch</span> <span class=\\\"token punctuation\\\" >(</span>route <span class=\\\"token operator\\\" >?</span> route<span class=\\\"token punctuation\\\" >.</span>key <span class=\\\"token punctuation\\\" >:</span> route<span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >case</span> <span class=\\\"token string\\\" >'about'</span><span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>About<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n\\n    <span class=\\\"token keyword\\\" >case</span> <span class=\\\"token string\\\" >'help'</span><span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>Help<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// As our Junction has no default branch, we handle the default</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// case </span>\\n    <span class=\\\"token keyword\\\" >case</span> <span class=\\\"token keyword\\\" >null</span><span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>Home<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// An undefined route indicates that the converter didn't know how</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// to handle the received location</span>\\n    <span class=\\\"token keyword\\\" >case</span> undefined<span class=\\\"token punctuation\\\" >:</span>\\n      content <span class=\\\"token operator\\\" >=</span> <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>h2</span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token number\\\" >404</span> <span class=\\\"token operator\\\" >-</span> Computer Says No<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>h2</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token keyword\\\" >break</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token keyword\\\" >return</span> <span class=\\\"token punctuation\\\" >(</span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>nav</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n          Use `locate()` to get a `Location` for the current route, but with\\n          any children nulled out\\n        */</span><span class=\\\"token punctuation\\\" >}</span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          Home\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n\\n\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span>junction<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >createRoute</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token string\\\" >'about'</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          About\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span>junction<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >createRoute</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token string\\\" >'help'</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          Help\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n\\n        <span class=\\\"token punctuation\\\" >{</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n          We can specify our own Location with the `&lt;Link>` component, but\\n          there is no gaurantee it will be correct!\\n        */</span><span class=\\\"token punctuation\\\" >}</span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>Link</span> <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span>history<span class=\\\"token punctuation\\\" >}</span></span> <span class=\\\"token attr-name\\\" >to</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token punctuation\\\" >{</span> pathname<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'/computer-says-no'</span> <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >}</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n          Fail\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>Link</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>nav</span><span class=\\\"token punctuation\\\" >></span></span>\\n      <span class=\\\"token punctuation\\\" >{</span>content<span class=\\\"token punctuation\\\" >}</span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n  <span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >;</span>\\n<span class=\\\"token punctuation\\\" >}</span>\\n\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/**\\n * All of the live examples export a single component that takes a `history`\\n * object which is passed in by the documentation website app.\\n * \\n * You could still use these example component's as-is in a standard React\\n * app -- you'd just need to create and pass in your own `history`.\\n * \\n * To find out about `history` objects, see\\n * https://github.com/mjackson/history.\\n */</span>\\n<span class=\\\"token keyword\\\" >export</span> <span class=\\\"token keyword\\\" >default</span> <span class=\\\"token keyword\\\" >class</span> <span class=\\\"token class-name\\\" >BasicExample</span> <span class=\\\"token keyword\\\" >extends</span> <span class=\\\"token class-name\\\" >Component</span> <span class=\\\"token punctuation\\\" >{</span>\\n\\n  <span class=\\\"token function\\\" >componentWillMount</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// As an application's Junction doesn't usually change at runtime,</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// we only ever need a single application-wide converter</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter <span class=\\\"token operator\\\" >=</span> <span class=\\\"token function\\\" >createConverter</span><span class=\\\"token punctuation\\\" >(</span>junction<span class=\\\"token punctuation\\\" >)</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Handle the application's initial location</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >handleLocationChange</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >.</span>location<span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >componentDidMount</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>unlisten <span class=\\\"token operator\\\" >=</span> <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >listen</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>handleLocationChange<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >bind</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >componentWillUnmount</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >if</span> <span class=\\\"token punctuation\\\" >(</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>unlisten<span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n      <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >unlisten</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span>\\n      <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>unlisten <span class=\\\"token operator\\\" >=</span> <span class=\\\"token keyword\\\" >null</span>  \\n    <span class=\\\"token punctuation\\\" >}</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >handleLocationChange</span><span class=\\\"token punctuation\\\" >(</span>location<span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Convert the Location object emitted by our history into a Route</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// through our application Junction</span>\\n    <span class=\\\"token keyword\\\" >const</span> route <span class=\\\"token operator\\\" >=</span> <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >route</span><span class=\\\"token punctuation\\\" >(</span>location<span class=\\\"token punctuation\\\" >)</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// The Route produced by the converter may contain informatino which</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// the received Location object doesn't, due to default parameters</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// and default branches. If this is the case, create a new Location</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// object containing the new information, and redirect to it</span>\\n    <span class=\\\"token keyword\\\" >const</span> canonicalLocation <span class=\\\"token operator\\\" >=</span> route <span class=\\\"token operator\\\" >&amp;&amp;</span> <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >locate</span><span class=\\\"token punctuation\\\" >(</span>route<span class=\\\"token punctuation\\\" >)</span>\\n    <span class=\\\"token keyword\\\" >if</span> <span class=\\\"token punctuation\\\" >(</span>route <span class=\\\"token operator\\\" >&amp;&amp;</span> <span class=\\\"token operator\\\" >!</span><span class=\\\"token function\\\" >locationsEqual</span><span class=\\\"token punctuation\\\" >(</span>location<span class=\\\"token punctuation\\\" >,</span> canonicalLocation<span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n      <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >replace</span><span class=\\\"token punctuation\\\" >(</span>canonicalLocation<span class=\\\"token punctuation\\\" >)</span>\\n    <span class=\\\"token punctuation\\\" >}</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Add the route to component state to trigger a re-render</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >setState</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span> route <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >render</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    <span class=\\\"token keyword\\\" >return</span> <span class=\\\"token punctuation\\\" >(</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Screen Components always take `route` and `locate` props, so they</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// can decide what to render, and create Locations for any Links</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// and redirects.</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// In this example, we also pass a history. Usually, this would be</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// passed via context, using a &lt;Router> or &lt;HistoryContext> component.</span>\\n      <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>AppScreen</span>\\n        <span class=\\\"token attr-name\\\" >route</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>state<span class=\\\"token punctuation\\\" >.</span>route<span class=\\\"token punctuation\\\" >}</span></span>\\n        <span class=\\\"token attr-name\\\" >locate</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>converter<span class=\\\"token punctuation\\\" >.</span>locate<span class=\\\"token punctuation\\\" >}</span></span>\\n        <span class=\\\"token attr-name\\\" >history</span><span class=\\\"token script language-javascript\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >{</span><span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>props<span class=\\\"token punctuation\\\" >.</span>history<span class=\\\"token punctuation\\\" >}</span></span>\\n      <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token punctuation\\\" >)</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n<span class=\\\"token punctuation\\\" >}</span>\\n\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/prismjs-loader?lang=jsx!../examples/Raw.example.js\n ** module id = 238\n ** module chunks = 1\n **/"],"sourceRoot":""}